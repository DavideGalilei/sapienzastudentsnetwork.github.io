{
  "101226": "Obiettivi generali: acquisire una conoscenza delle tecniche elementari del Calcolo Differenziale e delle principali applicazioni a problemi di massimo-minimo e allo studio del grafico di funzioni.Obiettivi specifici:Conoscenza e comprensione: al termine del corso lo studente \u00a0avr\u00e0 acquisito le nozioni \u00a0e i risultati di base del Calcolo Differenziale con particolare attenzione ai concetti di funzione, limite di funzione e derivata.Applicare conoscenza e comprensione: al termine del corso lo studente \u00a0sar\u00e0 in grado di risolvere semplici problemi del Calcolo Differenziale, quali il calcolo esplicito di derivate, il calcolo del massimo e minimo locale e globale di funzioni di una variabile, e il disegno approssimativo del grafico di funzioni.Capacit\u00e0 critiche e di giudizio: lo studente avr\u00e0 le basi per utilizzare un grafico come strumento di analisi di una situazione concreta descrivibile matematicamente.Capacit\u00e0 comunicative: lo studente sar\u00e0 in grado di comprendere un testo scientifico di complessit\u00e0 non elevata e di riassumerne i concetti principali.Capacit\u00e0 di apprendimento: le conoscenze acquisite permetteranno uno studio, individuale o impartito in un corso, relativo ad aspetti pi\u00f9 avanzati del Calcolo Differenziale e al Calcolo Integrale.",
  "1015883": "Obiettivi generaliIntroduzione alla programmazione tramite il linguaggio Python.Obiettivi specificiIntroduzione alla programmazione tramite il linguaggio Python.Tipi di dati, variabili, assegnamenti, strutture di controllo, funzioni, classi, moduli e Input/Output.Strutture dati: vettori, stringhe, liste, tuple e dizionari.Progettazione e sviluppo di programmi tramite programmazione procedurale e orientata agli oggetti.Algoritmi ricorsivi ed iterativi.Librerie di Python per la grafica, per la gestione dei file, per l'elaborazione di testi/html e per l'accesso ad Internet.Debugging e testing di programmi.Conoscenza e comprensioneComprendere e definire i requisiti di un problema.Decidere come rappresentare le informazioni in input e quali strutture dati usare per le elaborazioni intermedie e per l'output.Definire l'algoritmo di soluzione.Codificare l'algoritmo sotto forma di programma Python.Modularizzare il programma in piccole funzioni/metodi separate.Verificare tramite tests che il programma segua i requisiti.Applicazione di conoscenza e comprensioneLo studente dovr\u00e0 realizzare dei compiti di programmazione per casa, scansionati durante il corso, per mettere in pratica e dimostrare le conoscenze apprese.Alla fine del corso la prova d'esame sar\u00e0 basata su una prova in laboratorio in cui lo studente dovr\u00e0 risolvere e programmare alcuni esercizi.Autonomia di giudizioLo studente alla fine del corso deve essere in grado di scegliere autonomamente come risolvere un problema di programmazione (analisi, implementazione e test).Abilit\u00e0 comunicativeNella fase di analisi del problema e definizione dei requisiti \u00e8 importante avere una buona capacit\u00e0 di comprensione del linguaggio.Capacit\u00e0 di apprendimento successivoLe basi dell'analisi di un problema per comprendere le specifiche e progettare sia le strutture dati necessarie che l'algoritmo pi\u00f9 adatto \u00e8 applicabile ad altri linguaggi di programmazione e potr\u00e0 aiutare nei successivi corsi di programmazione.",
  "1020420": "Obiettivi generali:L'insegnamento \u00e8 indirizzato all'acquisizione delle conoscenze logiche e insiemistiche di base per affrontare lo studio di altri argomenti in matematica ed informatica.Obiettivi specifici:Conoscenza e comprensione:Alla fine del corso lo studente avr\u00e0 piena comprensione degli strumenti logico-insiemistici propostiApplicare conoscenza e comprensione:Avr\u00e0 acquisito la capacit\u00e0 di portare avanti un rigoroso, anche se elementare, ragionamento matematico, in particolare per quanto riguarda i principi logici fondamentali e l\u2019uso dell\u2019induzione in tutte le sue forme.Capacit\u00e0 critiche e di giudizio:Sar\u00e0 quindi capace di affrontare criticamente gli argomenti proposti in altri insegnamenti sia teorici che applicati. A questo proposito vengono forniti molti esempi presi da altri insegnamenti.Capacit\u00e0 di comunicare quanto si \u00e8 appreso:La partecipazione attiva in classe e l\u2019uso dell\u2019esame orale servono a stimolare lo studente nell\u2019acquisire il linguaggio proprio della matematica e a trasmettere le conoscenze e le capacit\u00e0 acquisite in maniera appropriata.Capacit\u00e0 di proseguire lo studio: Lo studente sar\u00e0 in grado di approfondire nello studio personale i temi trattati usando quanto appreso come base.",
  "1015880": "Obiettivi generali: Metodologie di progettazione di circuiti combinatori e sequenziali. Obiettivi specifici:codifica binaria di vari tipi di dato, algebra booleana, analisi e sintesi di circuiti combinatori, flip-flop, analisi e sintesi di circuiti sequenziali, registri, interconnesione tra registri e altri moduliConoscenza e comprensione: Conoscere e capire come l'elaboratore gestisce ed elabora l'informazioneApplicare conoscenza e comprensione:Dimostrare di saper progettare semplici circuiti combinatori e sequenziali in grado di svolgere determinati compiti. Capacit\u00e0 critiche e di giudizio: saper scegliere il miglior approccio, tra i vari studiati, per risolvere un determinato compitoCapacit\u00e0 comunicative: essere in grado di valutare e motivare le proprie scelte nella progettazione di un circuitoCapacit\u00e0 di apprendimento: Capire le differenze e i vantaggi delle varie tecniche di progettazione.",
  "1015881": "Obiettivi generali:L\u2019obiettivo dell'insegnamento di Architettura degli elaboratori \u00e8 di far comprendere i principi che sono usati per progettare i calcolatori moderni. In particolare, il corso tratta la struttura interna del microprocessore e le idee che hanno permesso la straordinaria evoluzione della potenza di calcolo negli ultimi 30 anni. come pipelining, caching, branch prediction, e multi-processing.Obiettivi specifici:Il corso tratta i principi di base di organizzazione del microprocessore e le nozioni di pipelining, caching, branch prediction, virtualizzazione e multi-processing. Inoltre, il corso tratta la programmazione assembly.Conoscenza e comprensione:Lo studente acquisir\u00e0 conoscenza sull\u2019organizzazione del microprocessore MIPS, come implementazione delle idee generali che fanno parte degli obbiettivi del corso. Inoltre, lo studente acquisir\u00e0 conoscenza su come si strutturano i programmi in assembly, incluse le strutture dati, i paradigmi standard di programmazione e la ricorsione.Applicazione di conoscenza e comprensione:Le conoscenze sono applicate sulla architettura MIPS, comprese in modo tale da poter capire le implicazioni delle scelte di programmazione sulla performance dei programmi su hardware specifico. Questa risultato \u00e8 ottenuto tramite esercizi di programmazione e di valutazione delle prestazioni.Autonomia di giudizio:Lo studente sar\u00e0 in grado di comprendere le problematiche relative alle prestazioni del software su hardware specifico e di valutarne autonomamente le caratteristiche.Abilit\u00e0 comunicative:Il corso non si propone espliciti obiettivi sulle capacit\u00e0 comunicative, eccetto di formare all'esposizione rigorosa degli argomenti tecnici.Capacit\u00e0 di apprendimento successivo:Il corso pone le basi per la comprensione dei moduli dell'insegnamento di Sistemi operativi e di tutti i corsi di programmazione, inclusa la programmazione di sistemi paralleli.",
  "97796": "Obiettivi generali:Lo scopo del corso \u00e8 fornire strumenti di analisi matematica di base come integrali, serie numeriche e di potenze ed equazioni differenziali. Obiettivi specifici:Conoscenza e comprensione:L\u2019obiettivo \u00e8 che lo studente apprenda alcune tecniche di integrazione per calcolare integrali definiti ed indefiniti usando la formula di integrazione per parti e l\u2019integrazione per sostituzione. Lo studente sara\u2019 in grado di studiare la convergenza delle serie numeriche e approssimare, in alcuni casi, la loro somma e studier\u00e0 le serie di potenze e gli sviluppi in serie di Taylor delle funzioni elementari. Infine imparer\u00e0 a risolvere alcune equazioni differenziali ordinarie del primo ordine a variabili separabili e lineari del primo ordine ed equazioni differenziali del secondo ordine lineari con coefficienti costanti omogenee e non. Applicazione di conoscenza e comprensione:Il corso prevede lezioni teoriche ed esercitazioni per apprendere lo svolgimento degli esercizi pratici. A meta\u2019 del corso \u00e8 prevista una prova pratica per verificare l\u2019apprendimento del programma svolto.",
  "1015885": "Obiettivi generaliIntroduzione ai metodi di base per la progettazione e l'analisi degli algoritmi, iterativi e ricorsivi, ed alla valutazione della loro efficienza computazionale.Obiettivi specificiConoscenza e comprensione:Al termine del corso gli studenti conosceranno le metodologie di base per la progettazione e l'analisi di algoritmi iterativi e ricorsivi, le strutture dati elementari, alcuni modi per scandire tali strutture, i principali algoritmi di ordinamento e le implementazioni pi\u00f9 elementari dei dizionari.Applicare conoscenza e comprensione:Al termine del corso gli studenti avranno acquisito familiarit\u00e0 con le principali strutture dati di base, in particolare quelle che implementano i dizionari. Sapranno spiegarne gli algoritmi e analizzarne la complessit\u00e0, evidenziando come le prestazioni dipendano dalla struttura dati utilizzata. Saranno in grado di progettare nuove strutture dati e i relativi algoritmi, rielaborando quelli esistenti; sapranno spiegare i principali algoritmi di ordinamento, illustrando le strategie di progetto sottostanti e le relative analisi di complessit\u00e0; saranno in grado di confrontare i comportamenti asintotici dei tempi di esecuzione degli algoritmi studiati; saranno in grado di progettare soluzioni ricorsive di problemi e di analizzare asintoticamente gli algoritmi risultanti. Capacit\u00e0 critiche e di giudizio:Lo studente avr\u00e0 le basi per analizzare la qualit\u00e0 di un algoritmo e delle relative strutture dati, sia dal punto di vista della effettiva risoluzione del problema che da quello della efficienza computazionale con la quale il problema viene risolto.Capacit\u00e0 comunicative:Lo studente acquisir\u00e0 la capacit\u00e0 di esporre in modo chiaro ed organizzato le proprie conoscenze, capacit\u00e0 che verr\u00e0 verificata sia mediante i quesiti presentati nelle prove scritte che durante la prova orale. Lo studente sar\u00e0 in grado di esprimere un'idea algoritmica in modo rigoroso ad alto livello, in pseudocodice.Capacit\u00e0 di apprendimento successivo:Le conoscenze acquisite permetteranno allo studente di affrontare lo studio, individuale o previsto nell'ambito di un corso di laurea magistrale, di tecniche algoritmiche e di strutture dati di base.",
  "1015884": "Obiettivi generali:Apprendimento dei concetti della programmazione orientata agli oggetti mediante il linguaggio di programmazione Java.Obiettivi specifici:I concetti fondamentali della programmazione orientata agli oggetti: classi e oggetti, incapsulamento, ereditariet\u00e0, polimorfismo, binding statico e dinamico, i design pattern. La programmazione funzionale. Gli strumenti e le metodologie di base della progettazione software tramite un linguaggio orientato agli oggetti. Il linguaggio Java.Conoscenza e comprensione:Conoscenza dei costrutti dei linguaggi di programmazione orientata agli oggetti, con particolare riferimento al linguaggio Java. Comprensione di un programma Java. Capacit\u00e0 di scrittura di un programma Java di piccole e medie dimensioni.Applicare conoscenza e comprensione:Essere in grado di applicare le metodologie di base per affrontare la progettazione di sistemi software di grandezza medio-piccola. Saper usare i principali strumenti di sviluppo per realizzare tali sistemi in Java.Capacit\u00e0 critiche e di giudizio:Capacit\u00e0 di identificare istruzioni, costrutti o pattern errati o inefficienti cos\u00ec come corretti o efficienti in Java.Capacit\u00e0 comunicative:Illustrazione del progetto sviluppato.Capacit\u00e0 di apprendimento successivo:Capacit\u00e0 di apprendere e applicare nuove tecniche di programmazione a partire da quelle apprese durante il corso.",
  "AAF1101": "L'insegnamento della lingua inglese punta a mettere in grado lo studente di leggere correttamente la letteratura scientifica in inglese, la documentazione tecnica, e di poter sostenere conversazioni in inglese su aspetti tecnici.",
  "1015886": "Obiettivi generali:Fornire conoscenze di base di teoria dei gruppi e di algebra lineare che sono comunemente utilizzati in informatica.\"Obiettivi specifici:Concetti di Algebra elementariIntroduzione alle strutture algebricheSviluppo del linguaggio dell'algebra lineare: spazi vettoriali e loro omomorfismi; spazi vettoriali, numeri e algebra delle matrici; endomorfismi, determinanti e diagonalizzazione; applicazioni.Conoscenze e comprensione:Alla fine del corso lo studente sar\u00e0 in grado di fare conti in gruppi piccoli di facile struttura e di comprendere il significato e l'utilizzo di matrici nello studio di fenomeni lineari.Applicare conoscenza e comprensione:Utilizzo della diagonalizzazione di operatori per fornire un'interpretazione geometrica ad un fenomeno lineare e ricavarne informazioni rilevanti. Utilizzo del concetto di gruppo nello studio di problemi combinatori finiti.Capacit\u00e0 di giudizio:Gli studenti saranno in grado di scegliere lo strumento algebrico pi\u00f9 appropriato allo studio di un problema.Capacit\u00e0 di comunicazione:Gli studenti impareranno il linguaggio dell'algebra lineare e dei gruppi e rudimenti di complessit\u00e0.Capacit\u00e0 di apprendimento:L'apprendimento del linguaggio lineare e gruppale fornir\u00e0 agli studenti la capacit\u00e0 di apprendere argomenti che ne fanno uso.",
  "I": "Obiettivi generali:Esporre gli studenti a solide metodologie di progettazione e realizzazione di applicazioni per basi di datiObiettivi specifici:Esporre gli studenti a metodologie formali e scalabili per l'analisi concettuale e la progettazione di applicazioni per basi di dati e a tecnologie standard per la loro realizzazione.Conoscenza e comprensione:Gli studenti acquisiranno conoscenze metodologiche fondamentali per la progettazione di applicazioni per basi di dati non banali (in particolare per le fasi di: a) raccolta dei requisiti; b) analisi concettuale dei dati e delle funzionalit\u00e0; c) progettazione della base dati e delle funzionalit\u00e0) e per la loro realizzazione (utilizzo di DBMS e di linguaggi standard di definizione, interrogazione e manipolazione dei dati).Applicare conoscenza e comprensione:Gli studenti saranno in grado di applicare in modo efficace le conoscenze indicate al punto precedente in progetti reali di applicazioni per basi di dati non banali.Capacit\u00e0 critiche e di giudizio:Gli studenti saranno in grado di prendere autonomamente decisioni razionali in tutte le fasi del processo di progettazione di applicazioni per basi di dati.Capacit\u00e0 comunicative:Gli studenti saranno in grado di interagire in modo proficuo con i committenti (per quanto concerne la raccolta dei requisiti) e con altri analisi e progettisti (per quanto concerne le attivit\u00e0 di analisi e progettazione di sistemi software non banali).Capacit\u00e0 di apprendimento:Gli studenti saranno in grado di ampliare le loro conoscenze in modo autonomo consultando, secondo necessit\u00e0, manualistica tecnica nell'ambito della progettazione di applicazioni per basi di dati.",
  "1020421": "Obiettivi generali: Acquisire conoscenza e capacit\u00e0 di applicazione di argomenti di base di probabilit\u00e0 e statistica.Obiettivi specifici: Assiomi e propriet\u00e0 elementari delle probabilit\u00e0. Variabili Aleatorie. Distribuzioni continue e discrete. Valori attesi. Introduzione all'inferenza statistica.Conoscenza e comprensione: Al termine del corso lo studente avr\u00e0 acquisito le nozioni e i risultati di base relativi alla teoria della probabilit\u00e0 su spazi finiti e numerabili, al concetto di vettore aleatorio discreto e al concetto di variabile aleatoria continua.Applicare conoscenza e comprensione: Gli studenti che abbiano superato l\u2019esame saranno in grado di applicare le nozioni di calcolo combinatorio per risolvere semplici problemi di probabilit\u00e0 discreta, problemi inerenti vettori casuali discreti e numeri casuali rappresentati da variabili aleatorie continue. Lo studente sar\u00e0 anche in grado di apprezzare il significato e le implicazioni dell\u2019indipendenza e del condizionamento (nell\u2019ambito di modelli discreti), comprendere il significato di alcuni teoremi limite fondamentali, quali la legge dei grandi numeri.Capacit\u00e0 critiche e di giudizio: Lo studente avr\u00e0 le basi per analizzare e costruire modelli probabilistici in semplici situazioni di interesse fisico, biologico e tecnologico, utilizzare tavole e software di simulazione delle leggi discrete di pi\u00f9 comune applicazione, nonch\u00e9 della legge gaussiana, e di comprendere l\u2019utilizzazione di strumenti statistici elementari nell\u2019inferenza, nel campionamento statistico e nella simulazione.Capacit\u00e0 comunicative: Capacit\u00e0 di esporre i contenuti nella parte orale della verifica e negli eventuali quesiti teorici presenti nella prova scritta.Capacit\u00e0 di apprendimento: le conoscenze acquisite permetteranno uno studio, individuale o impartito in un corso relativo ad aspetti pi\u00f9 specialistici di teoria della probabilit\u00e0.",
  "II": "Obiettivi generali: Il corso ha come obiettivi i concetti, la struttura, e i meccanismi dei sistemi operativi. Verranno trattate caratteristiche fondamentali, presenti fin dai sistemi pi\u00f9 tradizionali, ma anche peculiarit\u00e0 dei sistemi moderni che nascono come conseguenza dell\u2019evoluzione ricorrente della tecnologia.Conoscere ed usare l'interfaccia di programmazione fra sviluppatore software e kernel relativamente ai servizi base di accesso alle risorse del sistema operativo Linux. Obiettivi specifici:Caratteristiche e concetti dei sistemi operativi moderni, con particolare riferimento ai sistemi Unix e Linux. Si inizier\u00e0 con una descrizione dell\u2019evoluzione dei sistemi operativi nel tempo, per continuare con concetti fondamentali come i processi, lo stallo, e relativi meccanismi di prevenzione, la concorrenza tra processi, la gestione della memoria, processore e I/O, i file system e la sicurezza.Conoscere i concetti (processi, espressioni regolari, file system) e i comandi shell pi\u00f9 importanti di Linux. Saper creare script in Bash. Saper scrivere programmi C che usino le system call di Linux.Conoscenza e comprensione:Capire in modo profondo come i sistemi operativi danno supporto all\u2019esecuzione dei programmi degli utenti e gestiscono le periferiche hardware di un computer. Metodi e tecniche fondamentali per la rappresentazione dei processi in memoria e la gestione efficiente di multiprogrammazione\u2014molteplici processi eseguiti contemporaneamente in un sistema con risorse limitate.Conoscenza del funzionamento interno del sistema operativo Linux. Conoscenza del funzionamento della shell Bash. Fondamenti del linguaggio C. Conoscenza delle principali system call di Linux.Applicare conoscenza e comprensione:Progettare programmi a livello utente e di sistema in modo efficiente e sicuro.Saper creare script in Bash in grado di risolvere problemi pratici. Saper scrivere programmi in C che sfruttino le system call di Linux per ottimizzare l'uso delle risorse.Capacit\u00e0 critiche e di giudizio:Essere in grado di predire l\u2019uso delle risorse richieste da un programma, di scoprire una possibile situazione di stallo in un sistema multiprogrammato, garantire la mutua esclusione tra processi e l\u2019accesso protetto a zone di memoria o risorse sensibili.Saper valutare la soluzione pi\u00f9 appropriata per ottenere un determinato risultato, usando o singoli comandi shell, o uno script Bash, o un programma C basato su system call di Linux.Capacit\u00e0 comunicative: Saper comunicare in modo chiaro e preciso le caratteristiche dei sistemi operativi e i loro meccanismi di supporto software/hardware.Essere in grado di comunicare e documentare script Bash e programmi C basati su system call di Linux.Capacit\u00e0 di apprendimento:Saper sfruttare la conoscenza acquisita nella progettazione di sistemi e di programmi utente nel modulo successivo del corso. Essere in grado di usare questa conoscenza nell\u2019apprendimento di propriet\u00e0 di sistemi pi\u00f9 complessi come quelli distribuiti e cloud.Essere in grado di usare i concetti appresi in corsi avanzati da sistemista aziendale, o in un eventuale corso avanzato che richieda interazione con Linux, come ad es.: programmazione di sistema, cloud computing, sistemi distribuiti, cybersecurity.",
  "1015888": "Obiettivi generaliAcquisire la conoscenza di base delle pi\u00f9 note tecniche algoritmiche di progettazione e delle tecniche di valutazione della correttezza e della complessit\u00e0 degli algoritmi.Obiettivi specificiConoscenza e comprensione:Al termine del corso gli studenti posseggono le conoscenze di base relative a:- tecniche fondamentali di progettazione algoritmica;- analisi della correttezza e della efficienza degli algoritmi;Applicazione di conoscenza e comprensione:Al termine del corso gli studenti sono in grado di:- analizzare le prestazioni di un algoritmo tramite strumenti matematici rigorosi;- analizzare algoritmi e strutture dati- progettare ed analizzare nuovi algoritmi, sfruttando le metodologie presentate durante il corso.Autonomia di giudizio:Lo studente alla fine del corso deve essere in grado di scegliere autonomamente qual\u2019\u00e8 la tecnica algoritmica pi\u00f9 adatta da applicare per un determinato problema e valutare tra pi\u00f9 soluzioni algoritmiche per un certo problema qual\u2019\u00e8 da preferirsi.Abilit\u00e0 comunicative:Lo studente acquisir\u00e0 la capacit\u00e0 di esprimere un\u2019idea algoritmica tramite l\u2019uso di uno pseudocodice.Capacit\u00e0 di apprendimento:Lo studente avr\u00e0 acquisito la capacit\u00e0 di analizzare un problema, progettare le necessarie strutture dati e un algoritmo corretto ed efficiente che lo risolva.",
  "1015889": "Obiettivi generali:Imparare le basi delle reti di elaboratori moderne e Internet.Obiettivi specifici:Conoscenza e comprensione:Conoscenza e comprensione dei protocolli dei livelli applicazione, trasporto, rete e collegamento della pila TCP/IP.Applicazione di conoscenza e comprensione:Capacit\u00e0 di comprendere qualsiasi protocollo coinvolto nella comunicazione TCP/IPCapacit\u00e0 di comprendere strumenti e tecniche per risolvere problemi di reteCapacit\u00e0 di usare servizi di rete come DNS e DHCP che permettono di far funzionare una reteAutonomia di giudizio:Individuare problemi di reteValutare la realizzazione di nuovi serviziAbilit\u00e0 comunicative:Capacit\u00e0 di descrivere le reti in termini strutturali secondo il modello a 5 livelli.Capacit\u00e0 di apprendimento successivo:Il corso fornisce le basi per poter apprendere nozioni di reti wireless e Internet of Things.",
  "1041727": "Obiettivi generali: Durante il corso saranno introdotti i pi\u00f9 importanti risultati dell\u2019Informatica teorica: a partire dai fondamentali risultati in teoria della calcolabilit\u00e0 degli anni trenta, passando per quelli in teoria degli automi degli anni cinquanta per arrivare al problema aperto P contenuto o uguale a  NP, esplicitamente sollevato negli anni settanta. Obiettivi specifici:Gli studenti capiranno che ci sono diversi modelli di computazione e cosa ne determina il potere computazionale.Gli studenti apprenderanno concetti astratti come classi di linguaggi, macchine universali, riducibilit\u00e0 e sapranno che alcuni problemi non possono essere risolti con un calcolatore e che altri sono computazionalmente difficili da risolvere o addirittura cos\u00ec difficili da poter essere considerati non risolvibili. Faremo vedere come alcuni di questi risultati sono utilizzati oggi.Conoscenza e comprensione: Al termine del corso gli studenti conosceranno i metodi e risultati di base della della teoria degli automi, della calcolabilit\u00e0 e della complessit\u00e0 e sapranno applicarli per individuare la complessit\u00e0 di problemi in diversi campi. In particolare sapranno:dimostrare l\u2019equivalenza tra le diverse caratterizzazioni dei linguaggi regolaridimostrare l\u2019equivalenza tra le diverse caratterizzazioni dei linguaggi context-freespiegare il concetto di non determinismogiustificare l'esistenza di problemi privi di soluzioni algoritmiche o intrattabili.Applicazione di conoscenza e comprensione:Gli studenti impareranno:come costruire automi finiti (deterministici e non) da una specifica (formale o informale)come costruire automi a pila (deterministici e non) da una specifica (formale o informale)a usare la riducibilit\u00e0 tra problemi per dimostrarne la decidibilit\u00e0 o l'indecidibilit\u00e0a usare la riducibilit\u00e0 polinomiale per provare la NP-hardness di un problemaAutonomia di giudizio:Capire il giusto livello di astrazione utile per risolvere un problema, scegliere il modello computazionale pi\u00f9 conveniente in un determinato contesto alicativoAbilit\u00e0 comunicative: descrivere un linguaggio formale, a parole o attraverso uno degli strumenti offerti di descrizione finita, descrivere problemi indecidibili, intrattabili o trattabili, spiegare il significato e la rilevanza dele classi P ed NP nonch\u00e9 del problema \u201cP=NP?\"Capacit\u00e0 di apprendimento:Lo studente sar\u00e0 in grado di imparare altri modelli computazionali, sia completamente diversi da quelli studiati durante il corso, sia variazioni di questi. Egli sar\u00e0 capace di capire nuove prove di NP-completezza o pi\u00f9 in generale prove di completezza per una qualunque classe di complessit\u00e0",
  "1022301": "Obiettivi generali: Il corso illustra i fondamenti delle metodologie e degli strumenti per la gestione dei processi software. Particolare attenzione viene dedicata alle metodologie di analisi e progettazione orientate agli oggetti, e alla loro gestione e documentazione mediante UML.Obiettivi specifici:Introduzione agli approcci all'ingegneria del software e al ciclo di vita del software, approfondimento sulle attivit\u00e0 di specifica, analisi, progetto e test di sistemi software, tecniche per la gestione dei processi, con particolare riferimento alla gestione della qualit\u00e0 e dei rischi e all'analisi dei costi.Conoscenze e comprensione:Alla fine del corso lo studente avr\u00e0 acquisito conoscenze relative ai principali modelli di ciclo di vita del software, alle metriche per il dimensionamento dello sforzo, alle tecniche di descrizione delle diverse componenti di un progetto software. Saranno state acquisite conoscenze relative all'uso del linguaggio UML. Infine, avranno anche acquisito familiarit\u00e0 con la letteratura scientifica nel campo.Applicarei conoscenza e comprensione:Alla fine del corso lo studente sar\u00e0 in grado di lavorare in team alle attivit\u00e0 di analisi, progettazione, documentazione e gestione di progetti software di medie dimensioni. Avranno imparato a produrre documentazione basata su UML, relativamente ai principali tipi di diagrammi: dei casi d'uso, delle classi, di interazione, di stato e di attivit\u00e0, anche attraverso l'utilizzo di ambienti software professionali orientati allo sviluppo sistematico di progetti software. Infine saranno in grado di produrre una valutazione dello sforzo basato su Punti Funzione e Punti Use Case.Capacit\u00e0 di giudizio:Gli studenti svilupperanno le capacit\u00e0 di analisi necessarie per valutare diverse alternative durante il processo di sviluppo software, con particolare riferimento alla valutazione delle scelte architetturali e dei rischi di progetto.Capacit\u00e0 di comunicazione:Gli studenti impareranno a documentare le loro scelte, anche attraverso l'uso di strumenti di generazione della documentazione, in particolare sfruttando notazioni diagrammatiche. Avranno anche acquisito la capacit\u00e0 di preparare presentazioni relative ad argomenti scientifici.Capacit\u00e0 di apprendimento successivo:La conoscenza degli aspetti di rigore formale alla base della disciplina dell'ingegneria del software permetter\u00e0 agli studenti di acquisire rapidamente confidenza con tecniche, oltre a quelle considerate nel corso, basate su principi generali.",
  "AAF1053": "Il tirocinio formativo \u00e8 svolto sotto la guida di un responsabile e pu\u00f2 essere esterno (svolto presso aziende o enti esterni) o interno (svolto nell'ambito del corso di laurea). In entrambi i casi il tirocinio ha una durata di circa tre mesi e prevede che allo studente sia proposto un problema del mondo reale, da risolvere attraverso l'elaborazione di un progetto sviluppato con un approccio professionale.",
  "AAF1004": "La prova finale consiste nella stesura, nella presentazione e nella discussione di una dissertazione scritta, elaborata autonomamente dallo studente, che documenti in modo organico e dettagliato il problema affrontato nell'ambito del tirocinio formativo e tutte le attivit\u00e0 compiute per pervenire alla soluzione.",
  "1022264": "Obiettivi generali:Il corso illustra i fondamenti dei linguaggi di programmazione. Particolare attenzione viene dedicata alla semantica statica e dinamica dei linguaggi (teoria dei tipi, semantica operazionale ed assiomatica) ed agli strumenti formali per la specifica e la verifica del software.Obiettivi specifici:Approfondimento sulle algebre induttive come fondamento di sintassi astratta, strutture dati e semplici logiche (equazionali) di programmi. Cenni sulla co-induzione come fondamento di analisi di processi concorrenti e strutture lazy. Confronto fra linguaggi lazy e eager, statici e dinamici, nel contesto di diversi paradigmi di programmazione: imperativo, funzionale, ad oggetti. Teoria dei tipi, con particolare attenzione al polimorfismo parametrico (alla ML) e di sottoclasse (alla Java).Conoscenze e comprensione:Alla fine del corso lo studente avr\u00e0 acquisito conoscenze fondazionali relative ai linguaggi di programmazione e ai principali paradigmi di programmazione, e sar\u00e0 in grado di inquadrare in una mappa concettuale coerente alcuni fra le principali aree di studio dell\u2019informatica teorica, comprendendone le interconnessioni.Applicazione di conoscenza e comprensione:Alla fine del corso lo studente sar\u00e0 in grado di orientarsi fra i diversi paradigmi della programmazione, con particolare attenzione alla programmazione funzionale. Avr\u00e0 acquisito una conoscenza di base del linguaggio funzionale SML e della sua teoria dei tipi, nonch\u00e8 dell\u2019uso dei metodi formali.Capacit\u00e0 di giudizio:Gli studenti acquisiranno strumenti culturali per sviluppare software di qualit\u00e0 e per comprendere ed inquadrare le tendenze emergenti dei linguaggi moderni.Capacit\u00e0 di comunicazione:Gli studenti impareranno ad usare il linguaggio della matematica e della logica per descrivere, sviluppare ed analizzare il software, e ad integrare l\u2019approccio formale con un\u2019esposizione intuitiva delle idee.Capacit\u00e0 di apprendimento:L\u2019uso di strumenti matematici nella teoria e nella pratica della programmazione sviluppa capacit\u00e0 logiche e consapevolezza della complessit\u00e0 della materia di studio.",
  "1022265": "Obiettivi generali:Il corso introduce lo studente alla modellazione matematica di problemi di ottimizzazione, allo studio della programmazione lineare e intera e alle loro applicazioni in contesti reali.Obiettivi specifici:Apprendere: 1. Le principali tecniche di modellazione di problemi usando strumenti logico/matematici;2. Le propriet\u00e0 teoriche e sulle applicazioni pratiche dei principali problemi di ottimizzazione (in particolare su reti);3. sulla programmazione lineare e sue applicazioni;4. sull\u2019uso di software di modellazione ed ottimizzazione.Conoscenza  e comprensione: Sviluppare1. Capacit\u00e0 di sintesi, di ragionamento logico e di problem solving, mediante tecniche quantitative;2. capacit\u00e0 di formulare e risolvere (anche in maniera approssimata) problemi computazionalmente difficili;3. capacit\u00e0 di usare bibliografia e software in inglese;4. capacit\u00e0 di identificare problemi di programmazione matematica e ottimizzazione;5.  capacit\u00e0 di realizzare un modello di un problema matematico, determinando se \u00e8 lineare, intero, non lineare, di trovare soluzioni per il modello usando gli algoritmi appropriati, di interpretare la soluzione;Applicazione di conoscenza e comprensione:1. Applicazioni pratiche dei principali problemi di ottimizzazione (in particolare su reti);2. uso di software di modellazione ed ottimizzazione.Autonomia di giudizio:Viene rafforzata la autonomia di giudizio dello studente attraverso l'approfondimento della capacit\u00e0 di sintesi, di ragionamento logico-matematico e di problem solving, mediante tecniche quantitative;Abilit\u00e0 comunicative: Il corso sviluppa le abilit\u00e0 comunicative degli studenti  attraverso lavoro in equipe  degli studenti finalizzato a simulare la  risoluzione di  problemi di ottimizzazione che si possono presentare nel contesto reale di un azienda di logistica.Capacit\u00e0 di apprendimentoLe capacit\u00e0 acquisite nel corso sono di utilit\u00e0 in insegnamenti di livello superiore su temi avanzati nella teoria della complessita, di algoritmi di rete e di teoria dei grafi.",
  "10593235": "Obiettivi generali:Il corso \u00e8 finalizzato all'acquisizione della conoscenza di tecniche algoritmiche e di programmazione adatte alle moderne piattaforme di calcolo  multicore ed embedded.Obiettivi specifici:Conoscenza e comprensione: Al termine del corso gli studenti avranno una profonda comprensione dei principali problemi di programmazione posti dai sistemi embedded e multi-core,  nonch\u00e9 delle  tecniche di programmazione utili per scrivere codice efficiente e scalabile. Avranno una comprensione della programmazione a basso livello e della progettazione HW.Capacit\u00e0 di applicare conoscenza e comprensione: gli studenti saranno in grado di progettare, programmare e realizzare sistemi  embedded ed avranno una comprensione dei sistemi operativi adottati in tali tipi di sistemi. Capacit\u00e0 critiche e di giudizio: gli studenti saranno in grado di affrontare le sfide che si presentano nella progettazione di sistemi embedded e multicore  e nell'implementazione di programmi efficienti e scalabili per tali sistemi, anche tenendo conto delle caratteristiche architetturali delle diverse piattaforme di calcolo.Capacit\u00e0 di comunicare quanto si \u00e8 appreso: gli studenti saranno in grado di comunicare in modo efficace, riassumendo le idee principali nella progettazione di software embedded e multicore in modo chiaro e presentando informazioni tecniche accurate.Capacit\u00e0 di studio autonomo: obiettivo del corso \u00e8 di introdurre i principi di base nella progettazione di software embedded e multicore. Gli studenti saranno quindi in grado di estendere la loro conoscenza in modo indipendente, adattandola all\u2019evoluzione delle tecnologie e delle piattaforme di calcolo.",
  "1022262": "Obiettivi generali: Il corso si propone di esporre gli studenti ad un'ampia panoramica dell'Intelligenza Artificiale (IA).Obiettivi specifici:Il corso si propone di mettere gli studenti in grado di comprendere la teoria di un'ampia gamma di tecniche di IA, e di padroneggiarle nella pratica della progettazione di sistemi software intelligenti.Conoscenza e comprensione: Introduzione ad ampio spettro dei principi fondamentali e delle diverse branche dell'Intelligenza Artificiale (IA) e conoscenze su risoluzione di problemi mediante ricerca, inferenza logica, pianificazione, ragionamento, apprendimento.Applicare conoscenza e comprensione:Saper applicare il portafoglio di tecniche e gli approcci illustrati per la progettazione e realizzazione di sistemi software intelligenti. Capacit\u00e0 critiche e di giudizio: Gli studenti saranno in grado di prendere autonomamente decisioni razionali sulle tecniche di IA migliori da impiegare nella progettazione di sistemi software intelligenti.Capacit\u00e0 comunicative: Gli studenti saranno in grado di interagire in modo proficuo con altri ricercatori in IA su un'ampia gamma di argomenti.Capacit\u00e0 di apprendimento: Gli studenti saranno in grado di ampliare le loro conoscenze in modo autonomo consultando, secondo necessit\u00e0, la letteratura scientifica sull'IA.",
  "1022268": "Obiettivi generali:Il corso di Sicurezza ha l\u2019obiettivo di formare figure professionali capaci di affrontare con successo le sfide costituite dai problemi di sicurezza della societ\u00e0 dell\u2019informazione.Obiettivi specifici:Il corso prevede lo studio di vari modelli di controllo degli accessi, dell\u2019analisi delle principali difficolt\u00e0 e risoluzioni di problemi di crittografia e dei principali protocolli di sicurezza utilizzati in reteConoscenza e comprensione:Al superamento dell\u2019esame, lo studente avr\u00e0 conoscenza e capacit\u00e0 di comprensione delle basi della sicurezza informatica e delle principali tecnologie per l'analisi e la soluzione di problemi di sicurezza.Applicare conoscenza e comprensione:Il corso mette in grado lo studente di applicare la propria conoscenza e capacit\u00e0 di comprensione per risolvere problemi di sicurezza informatica, con sufficiente autonomia per affrontare problemi complessi; e per la consultazione efficace di documentazione avanzata di tipo scientifico e tecnologico.Autonomia di giudizio:Il corso mira ad acquisire capacit\u00e0 d\u2019interpretazione autonoma per proporre soluzioni a problemi di sicurezza congruenti con le tecnologie disponibili, e di aggiornamento continuo dell'evoluzione tecnologica, per formulare giudizi critici autonomi contribuendo all'avanzamento della sicurezza del sistema.Abilit\u00e0 comunicative:Lo studente acquisisce la capacit\u00e0 di presentare e di argomentare le proprie idee in merito ai problemi di sicurezza affrontati ed alle soluzioni proposte, sia con colleghi che con utenti  Capacit\u00e0 di apprendimento successivo:Il corso prevede lo sviluppo di capacit\u00e0 di approfondimento nell\u2019ambito della sicurezza informatica sia degli aspetti metodologici sia di quelli tecnologici, per adeguarsi al progredire delle tecniche e delle soluzioni ai problemi di sicurezza pi\u00f9 comuni, e per proseguire anche in autonomia alla soluzione di nuovi problemi di sicurezza.",
  "10589652": "Obiettivi generali: Apprendimento del paradigma di programmazione funzionale e di aspetti avanzati di programmazione imperativa.Studio comparato di diversi paradigmi di programmazione (imperativo, funzionale e a oggetti) per sviluppare un senso critico nell'apprendimento e valutazione dei linguaggi di programmazione. Obiettivi specifici:Conoscenza e Comprensione:Aspetti avanzati di programmazione C (in particolare uso di puntatori espliciti e (de)allocazione dinamica di memoria, valutazione della complessit\u00e0\u00a0 concreta dei programmi). Aspetti base ed avanzati di programmazione funzionale in Haskell (in particolare tipi polimorfi, funzionali di ordine superiore, laziness). Applicare Conoscenza e Comprensione:Applicare la metodologie specifiche di diversi paradigmi di programmazione alla soluzione dei problemi.Capacit\u00e0\u00a0 Critiche e di Giudizio:Lo studio comparato dei paradigmi di programmazione permette di valutare ad esempio quale sia il linguaggio pi\u00f9 adatto per risolvere un certo problema o sviluppare un progetto software. Le tecniche di ragionamento sui programmi possono guidare sia il testing che lo sviluppo dei programmi.Inoltre, lo studente dovrebbe acquisire strumenti necessari per valutare  criticamente altri linguaggi di programmazione. Capacit\u00e0\u00a0 ComunicativeLo studente \u00e8 stimolato, soprattutto nella presentazione da fare a fine corso, a esporre concisamente ma in modo preciso le idee necessarie allo sviluppo di una brillante soluzione a un problema computazionale ed anche l'analisi di un programma.Capacit\u00e0\u00a0 di Apprendimento:Lo studio comparato di diversi paradigmi di programmazione stimola la capacit\u00e0 di apprendimento di altri linguaggi di programmazione, dando allo studente gli strumenti per distinguere gli aspetti caratterizzanti di un linguaggio di programmazione (logica del core language, come ad esempio passaggio di parametri, sistema dei tipi, semantica dei comandi) da quelli pi\u00f9 strettamente tecnici (come imparare a usare librerie e strumenti di sviluppo, come IDE e debugger).",
  "97597": "Conoscenze acquisiteL'obiettivo principale del corso \u00e8 di insegnare il metodo scientifico. Per ogni argomento trattato, sono presentate le osservazioni sperimentali (o numeriche) del fenomeno che si vuole capire. Viene quindi illustrato il processo di riduzionismo, con le relative approssimazioni, che porta ad un modello sufficientemente semplice da poter essere trattato matematicamente. Infine sono introdotte le leggi fisiche che permettono la spiegazione del fenomeno osservato, mettendo in luce l'ambito di validit\u00e0 di tale leggi e i loro limiti.Competenze acquisiteAlla fine di questo corso lo studente dovrebbe aver appreso il metodo scientifico e dovrebbe essere in grado di applicarlo a qualsiasi problema di tipo scientifico che si trovi ad affrontare. In pratica dovrebbe aver sviluppato quella capacit\u00e0 di \"problem solving\" che \u00e8 molto richiesta in qualsiasi disciplina tecnico-scientifica.  Inoltre dovrebbe aver acquisito un bagaglio di leggi fisiche di base, che gli permettano di capire molti dei fenomeni naturali e dei dispositivi tecnologici che lo circondano.",
  "1021828": "Obiettivi generalL\u2019insegnamento si propone di fornire allo studente un\u2019introduzione alla matematica discreta, che costituisce uno dei settori pi\u00f9 innovativi della matematica. Sviluppato a partire dalla seconda met\u00e0 del novecento, \u00e8 ricco di problemi stimolanti e di grande utilit\u00e0 nelle applicazioni. Obiettivi specificiDurante il corso, lo studente verr\u00e0 a contatto con una serie di argomenti e problemi, di tipo completamente diverso da quelli incontrati in altri corsi di matematica tradizionali, e svilupper\u00e0, attraverso un impegno sistematico rivolto al \u201cproblem solving\u201d, un approccio concreto allo studio di problemi di grande valenza formativa, soprattutto per la futura attivit\u00e0 professionale.Conoscenza e comprensione: Al termine del corso lo studente \u2022\tconoscer\u00e0 i metodi, i problemi, e le possibili applicazioni della matematica discreta.\u2022\tsar\u00e0 in grado di capire, affrontare e risolvere semplici problemi di matematica discreta.\u2022\tattraverso esercitazioni scritte e eventuali presentazioni orali svilupper\u00e0 adeguate capacit\u00e0 critiche\u2022\tallo stesso modo eserciter\u00e0 la sua capacit\u00e0 di esporre e trasmettere ci\u00f2 che ha appreso\u2022\tlo studio individuale allener\u00e0 adeguatamente la sua capacit\u00e0 di studio autonomo e indipendente",
  "1022263": "Obiettivi generali: Al termine del corso gli studenti conoscono le teorie, i modelli e le regole che guidano il progetto e lo sviluppo e la validazione di interfacce e sistemi interattivi usabili.Gli studenti che superano l\u2019esame sono in grado di progettare sistemi interattivi seguendo i criteri dell\u2019interazione uomo-computer, analizzando il ruolo dell\u2019utente, gli scenari e i compiti principali, e tenendo in considerazione i vincoli implementativi mediante cicli di progetto e sviluppo molto brevi.  Obiettivi specifici:Conoscenza e comprensione: Al termine del corso gli studenti conoscono le teorie, i modelli e le regole che guidano il progetto di interfacce e sistemi interattivi usabili.\u200b Conoscono inoltre i principi di progettazione agile centrata sull'utente.\u200b Applicare conoscenza e comprensione:\u200bGli studenti applicano le conoscenze acquisite nella progettazione di un'interfaccia come lavoro di gruppo per l'esame.Capacit\u00e0 critiche e di giudizio: \u200bGli studenti, anche attraverso esercitazioni pratiche, acquisiscono competenze nella valutazione e validazione di interfacce uomo computer e \u200bsviluppano capacit\u00e0 di giudizio sull'usabilit\u00e0 di un'interfaccia e quindi sulle ricadute dell'uso dell'interfaccia in termini di efficacia, efficienza e soddisfazione. Capacit\u00e0 comunicative: \u200bGli studenti sostengono due presentazioni del loro lavoro di gruppo in occasione delle due revisioni previste con il docente. La prima revisione \u00e8 svolta in aula e la presentazione \u00e8 pertanto rivolta a tutti i colleghi al fine di esercitare le capacit\u00e0 comunicative.\u200b Capacit\u00e0 di apprendimento: \u200bLa capacit\u00e0 di apprendimento\u200b \u00e8 stimolata attraverso 1) attivit\u00e0 di progettazione guidata e autonoma con supervisione; 2) l'esposizione a problemi realistici di progettazione stimolando la ricerca autonoma di soluzioni non standard; 3) la presentazione di casi reali e stimolandone la discussione critica.",
  "1031337": "Obiettivi generali: Obiettivo generale del corso \u00e8 di trasferire agli studenti le conoscenze dello stato dell\u2019arte della biologia computazionale a seguito dell\u2019avvento di tecnologie di sequenziamento massivo per la produzione di dati genomici e proteomici. Tali basi sono necessarie poi per permettere agli studenti di raggiungere le competenze per una corretta analisi delle problematiche proprie dell\u2019area e la capacit\u00e0 di progettazione ed implementazione di un software adatto alla risoluzione del problema proposto. Pertanto il percorso formativo \u00e8 finalizzato alla formazione di una figura professionale che sia in grado di intervenire nella risoluzione e gestione di progetti informatici in ambito biomolecolare. Obiettivi specifici: Il corso si propone di formare persone esperte nelle analisi dei dati biomedici e progettisti di sistemi software che possiedano le conoscenze di base della biologia molecolare e degli strumenti bio-informatici utilizzati per affrontare la gestione dell'enorme flusso di dati generati in questo settore. Persone con tale profilo professionale dovranno essere in grado, partendo dalla piattaforma sperimentale di produzione dei dati (saranno particolarmente dettagliate le problematiche derivanti dai dati prodotti con sequenziamento massivo), di stabilire quali siano gli algoritmi di interesse per l'analisi dei dati grezzi del progetto. Dovranno inoltre acquisire una sensibilit\u00e0 critica ed essere in grado di definire un protocollo di analisi dei dati tenendo conto delle risorse di calcolo disponibili e, di conseguenza, ottimizzare l'analisi. Al termine del corso, gli studenti presenteranno anche strumenti da loro sviluppati per la gestione, l'integrazione e l'interrogazione delle enormi quantit\u00e0 di dati prodotti dalle analisi al fine di ottenere risultati finali biologici, efficaci e fruibili. Tali strumenti seguiranno gli standard richiesti nello sviluppo software tipici della comunit\u00e0 bioinformatica. Applicazione di conoscenza e comprensione:Gli obiettivi formativi sono realizzati attraverso lezioni frontali, attivit\u00e0 di laboratorio ed esercitazioni nelle quali sono previste simulazioni di progetti di lavoro, svolgimento in classe o discussione con partecipazione diretta degli studenti relativamente a problemi e all\u2019analisi di casi di studio. Durante le esercitazioni gli studenti apprenderanno come progettare e sviluppare \u2022 una pipeline di analisi bioinformatica per il processamento dei dati grezzi forniti dalle piattaforme di sequenziamento di nuova generazione (NGS) \u2022 l'automatizzazione ed ottimizzazione della pipeline di analisi NGS \u2022 un sistema software per la gestione ed interrogazione dei dati prodotti dall\u2019analisi \u2022 simulazioni di docking e dinamica molecolare di macromolecole biologiche in ambiente di calcolo ad alte prestazioni (HPC). Autonomia di giudizio: Gli studenti del corso acquisiranno la capacit\u00e0 di elaborare informazioni complesse e/o frammentarie (ad esempio dovranno gestire dati di sequenze annotate solo in parte, ossia solo alcune di esse saranno associate ad un intervallo cromosomico di un organismo sequenziato, e spesso annotate in maniera non standard) e dovranno pervenire ad una modellazione dei dati pensata in maniera originale ed autonoma, scelta coerentemente con l'ambito biologico del proprio progetto sperimentale. Abilit\u00e0 comunicative: Gli studenti saranno in grado di dialogare con i ricercatori dell'area biomedica, in modo chiaro, logico ed efficace, utilizzando gli strumenti metodologici acquisiti durante il corso e attraverso termini propri della biologia computazionale. L'acquisizione di queste competenze sar\u00e0 testata attraverso una verifica orale e diversi progetti sviluppati in laboratorio. Capacit\u00e0 di apprendimento:Gli studenti dovranno aver acquisito la capacit\u00e0 critica, originale ed autonoma di rapportarsi a problematiche proprie dei progetti di biologia computazionale e di applicare autonomamente le conoscenze acquisite durante il corso in vista di un'eventuale prosecuzione degli studi a livello superiore (laurea specialistica) o nella pi\u00f9 ampia prospettiva di approfondimento culturale e professionale nel caso di un impiego nell\u2019area biomedica/bioinformatica.",
  "1041761": "Obiettivi generali:Lo studente imparera' come funziona un compilatore sia dal punto di vista teorico che pratico.Obiettivi specifici:Conoscenza e comprensione:Allo studente saranno presentate le parti della Teoria dei Linguaggi Formali e  degli Automi necessarie ad avere una base teorica sul funzionamento dei compilatori.Applicare conoscenza e comprensione:Lo studente imparer\u00e0 come usare noti strumenti pratici per la costruzione di compilatori, come Lex a YACC.Capacit\u00e0 critiche e di giudizio:Una parte facoltativa dell'esame consister\u00e0 nel produrre un compilatore per un semplice linguaggio di programmazione ad alto livello.Capacit\u00e0 comunicative:Il corso non si propone espliciti obiettivi sulle capacit\u00e0 comunicative, eccetto di formare all'esposizione rigorosa degli argomenti formali.Capacit\u00e0 di apprendimento:I fondamenti teorici e gli strumenti pratici introdotti nel corso forniranno allo studente una base solida per studi pi\u00f9 avanzati in questo campo.",
  "1022267": "Obiettivi generali: Lo scopo del corso \u00e8 lo studio del linguaggio java lato server, per la realizzazione di applicazioni web. Il corso fornisce inoltre un\u2019analisi critica di diverse soluzioni implementative di molte funzionalit\u00e0 applicative comuni nello sviluppo di applicazioni web.Obiettivi specifici:Programmazione lato server mediante Java Servlet e pagine JSP.Conoscenza e comprensione: Il corso permetter\u00e0 la comprensione del supporto fornito dal linguaggio Java alla realizzazione di applicazioni web. In particolare lo studente studier\u00e0 le motivazioni alla base di tutte le scelte implementative, in particolare facendo riferimento alle architetture client-server e ai protocolli di rete in uso.Applicare conoscenza e comprensione:Attraverso il corso lo studente imparer\u00e0 a riconoscere tra le possibili soluzioni applicative ad un problema, quale offra i maggiori vantaggi in termini di prestazioni, sicurezza, portabilit\u00e0 e efficienza. Capacit\u00e0 critiche e di giudizio: Il corso metter\u00e0 lo studente in condizione di saper scegliere, dato un problema, la migliore metodologia risolutiva, attraverso la profonda comprensione dei requisiti e dei vincoli imposti dall'architettura.Capacit\u00e0 comunicative: Lo studente sar\u00e0 in grado di motivare le proprie scelte nella proposta di uno specifico approccio realizzativo di un\u2019applicazione Web, e fornire una analisi comparativa dell\u2019approccio scelto con altri approcci possibili.Capacit\u00e0 di apprendimento: Lo studente svilupper\u00e0 capacit\u00e0 di studio autonome e di comprensione e valutazione critica di nuove metodologie, tecnologie e modelli di sviluppo di applicazioni Web.",
  "10600494": "Obiettivi generali:Il corso si propone di fornire agli studenti gli strumenti di base per la modellazione,  analisi e progettazione di sistemi intelligenti.Obiettivi specifici:Il corso si propone di mettere gli studenti in grado di comprendere ed usare un'ampia gamma di tecniche di modellazione, progettazione, verifica e validazione per sistemi intelligenti.Conoscenza e comprensione:Introduzione ad ampio spettro dei principi fondamentali della modellazione, analisi e progettazione dei sistemi intelligenti modellati come sistemi dinamici sia tempo continuo che tempo discreto.Applicazione di conoscenza e comprensione:Saper applicare il portafoglio di tecniche e gli approcci illustrati per la modellazione, progettazione, verifica e validazione di sistemi intelligenti. Autonomia di giudizio:Gli studenti saranno in grado di prendere autonomamente decisioni razionali sulle tecniche da impiegare nella modellazione, progettazione, verifica e validazione di sistemi intelligenti.Abilit\u00e0 comunicative:Gli studenti saranno in grado di interagire in modo proficuo con esperti di dominio su un'ampia gamma di argomenti relativi alla modellazione, progettazione, verifica e validazione di sistemi intelligenti.Capacit\u00e0 di apprendimento:Gli studenti saranno in grado di ampliare le loro conoscenze in modo autonomo consultando, secondo necessit\u00e0, la letteratura scientifica di rilievo.",
  "10596283": "Obiettivi generali:L\u2019insegnamento di Organizzazione e Gestione per lo Start-Up Aziendale intende fornire agli studenti le conoscenze e i \u201cfondamentali\u201d per l\u2019analisi e la comprensione delle principali problematiche organizzative che caratterizzano l\u2019avvio e la gestione delle imprese nell\u2019era digitale ed un ampio ventaglio di strumenti utili per la loro risoluzione.In particolare, una volta affrontati i concetti di base relativi all\u2019impresa e alle dinamiche aziendali, l\u2019insegnamento approfondisce le principali tematiche relative allo start-up, quali la progettazione organizzativa, la pianificazione strategica, la valutazione della business idea e della relativa fattibilit\u00e0 economico-finanziaria.Tali tematiche vengono affrontate nell\u2019arco di un percorso didattico che si dispiega seguendo cronologicamente gli step funzionali alla redazione di un business plan. Pi\u00f9 precisamente, l\u2019insegnamento alterna momenti di lezione frontale ad attivit\u00e0 di laboratorio, nelle quali gli studenti, divisi in gruppi, saranno guidati didatticamente nella realizzazione di un business plan relativo ad un\u2019idea d\u2019impresa digitale. Tale percorso consente agli studenti di esaminare in prima persona le caratteristiche del processo di start-up, e li aiuta a comprendere le variabili (e le leve) fondamentali dell\u2019organizzazione, sulle quali la direzione aziendale pu\u00f2 agire per il miglioramento delle performance ed il conseguimento di posizioni di vantaggio competitivo sui concorrenti.Non sono previsti particolari prerequisiti, in termini di conoscenze pregresse di natura economico-aziendale, per la frequenza del corso ed il sostenimento delle prove d\u2019esame.Obiettivi specifici Obiettivi: nella prima parte si descriveranno e si analizzeranno le caratteristiche, gli elementi di base e gli attori che la caratterizzano l\u2019azienda, nonch\u00e9 le fasi del suo ciclo vitale. Si approfondiranno, inoltre, i rapporti esistenti tra l\u2019organizzazione e la gestione dell\u2019azienda, introducendo il concetto di \u201cequilibrio\u201d economico quale legge fondamentale alla base della capacit\u00e0 di sopravvivenza dell\u2019azienda nel tempo.Obiettivi: nella seconda parte inizier\u00e0 il percorso didattico atto a fornire le conoscenze necessarie per procedere alla realizzazione del business plan. Si partir\u00e0 dalla disamina delle opportunit\u00e0 di generazione di start-up nell\u2019era digitale, evidenziandone le differenze con lo start-up di impese tradizionali. Si esamineranno i fondamenti della strategia, con il passaggio dalla business idea alla formalizzazione del modello di business, i contenuti di base della progettazione organizzativa, con particolare riguardo al rapporto tra organizzazione, ambiente e strategia, le tecniche di analisi della fattibilit\u00e0 di mercato e di quella economico-finanziaria, le considerazioni alla base della scelta della forma giuridica, nonch\u00e9 quelle per l\u2019individuazione delle forme di finanziamento pi\u00f9 appropriate. Obiettivi: nella terza parte si approfondir\u00e0 il ruolo e la struttura del business plan. Pi\u00f9 precisamente, gli studenti, opportunamente divisi in gruppi, verranno didatticamente guidati attraverso il processo di redazione di un business plan. In questa parte, quindi, il business plan verr\u00e0 considerato come l\u2019obiettivo finale del corso che, oltre a rappresentare un project work valido ai fini della valutazione finale, verr\u00e0 presentato nell\u2019ambito di un vero e proprio contest alla fine del corso.Tali obiettivi saranno perseguiti attraverso l\u2019adozione di un appropriato mix di lezioni frontali, testimonianze provenienti dal mondo imprenditoriale e attivit\u00e0 laboratoriali di gruppo.Conoscenza e capacit\u00e0 di comprensione (knowledge and understanding).Al termine dell\u2019insegnamento gli studenti saranno in grado di riconoscere ed affrontare analiticamente le problematiche organizzative che caratterizzano la fase dello start-up, potendo contare su un ampio background teorico e un toolkit adeguato alla loro soluzione. Pi\u00f9 precisamente, la comprensione dei legami tra variabili ambientali, strategiche ed organizzative consentir\u00e0 loro di approcciare lo sviluppo dell\u2019idea imprenditoriale ricercando la coerenza degli elementi strategico-organizzativi con il mercato di riferimento, nel rispetto delle condizioni di economicit\u00e0 dell\u2019impresa. Inoltre, grazie all\u2019acquisizione degli strumenti necessari alla progettazione di una start-up digitale e alla conoscenza maturata nel processo di redazione del business plan, alla fine del corso gli studenti saranno in grado di sviluppare un\u2019idea imprenditoriale e di valutarne la fattibilit\u00e0, nonch\u00e9 di formalizzarla all\u2019interno di un business plan per procedere alla sua concreta realizzazione.  Tali conoscenze saranno acquisite alternando momenti di lezione frontale volti a fornire gli strumenti conoscitivi necessari alla comprensione dei vari argomenti, ad attivit\u00e0 laboratoriali di gruppo, nelle quali gli studenti, divisi in gruppi, saranno guidati didatticamente dal docente nella realizzazione di un business plan. Saranno inoltre previste testimonianze provenienti dal mondo imprenditoriale in grado di rappresentare dei casi di studio pratici ed esemplificativi di quanto affrontato dal punto di vista teorico.Capacit\u00e0 di applicare conoscenza e comprensione (applying knowledge and understanding).Attraverso i lavori individuali e di gruppo gli studenti saranno messi in condizione non solo di comprendere l\u2019origine, la natura e la tipologia delle varie problematiche organizzative, ma di elaborare soluzioni condivise utilizzando tecniche, modelli e strumenti di analisi trasferiti durante le lezioni frontali.La presentazione, da parte degli studenti, dei risultati dei lavori di gruppo consentir\u00e0 di sviluppare capacit\u00e0 di riflessione e di argomentazione, unitamente a capacit\u00e0 di scambio, condivisione ed esposizione dei risultati conseguiti.Le testimonianze degli esperti di organizzazione provenienti da primarie organizzazioni imprenditoriali e la discussione dei relativi temi con gli studenti, infine, permetter\u00e0 di corroborare \u2013 anche con un riscontro pratico \u2013 la capacit\u00e0 di applicazione delle tecniche e i risultati conseguiti dagli studenti stessi, e di apprendere dagli eventuali errori commessi.Autonomia di giudizio (making judgements). L\u2019insegnamento di Organizzazione Aziendale, attraverso modalit\u00e0 miste di erogazione dei contenuti (lezioni frontali, lavori di gruppo, testimonianze aziendali), pur dedicando un adeguato spazio ai principali modelli teorici consolidati nella letteratura di riferimento, intende stimolare gli studenti a realizzare una propria visione dei fenomeni organizzativi durante tutto il percorso didattico, incentivando l\u2019autonomia di giudizio e la soluzione creativa, pur orientata e guidata dal docente, delle conseguenti problematiche.In particolare, il processo di redazione del business plan alla base dei lavori di gruppo \u00e8 stato ideato proprio per incrementare capacit\u00e0 critiche, di riflessione e di elaborazione autonoma di giudizi, compresa quella volta ad evitare i pregiudizi che caratterizzano in quest\u2019area le fasi dei processi decisionali orientati al problem-solving, anche in ordine alle ricadute etiche e sociali che contraddistinguono le scelte organizzative.Abilit\u00e0 comunicative (communication skills). Lo svolgimento delle attivit\u00e0 laboratoriali di gruppo e la presentazione dei risultati raggiunti rappresenta un importante strumento, adottato nell\u2019insegnamento di Organizzazione Aziendale, per lo sviluppo di capacit\u00e0 comunicative. In particolare, da un lato, le discussioni durante le attivit\u00e0 di gruppo sono appositamente costruite per consentire agli studenti di imparare ad interagire e a comunicare, simulando attivit\u00e0 di condivisione delle conoscenze e di costruzione del consenso tipiche di contesti lavorativi reali; dall\u2019altro lato, la presentazione del business plan nell\u2019ambito del contest finale \u00e8 stata ideata proprio per permettere agli studenti di sperimentare in prima persona una reale presentazione della propria idea imprenditoriale di fronte a dei potenziali investitori.Tali capacit\u00e0 rappresentano una componente \u201cnaturale\u201d dell\u2019insegnamento in oggetto, considerato che la tematica della comunicazione organizzativa costituisce argomento di specifica trattazione nell\u2019ambito dello stesso.Capacit\u00e0 di apprendimento successivo (learning skills).Considerata l\u2019elevata trasversalit\u00e0 e multidisciplinariet\u00e0 dei temi trattati, i cui contenuti possono facilmente essere traslati anche in contesti organizzativi diversi dalle imprese (seppur caratterizzati da un orientamento al rispetto delle condizioni di economicit\u00e0 della gestione), l\u2019insegnamento di Organizzazione Aziendale consente di acquisire una base teorica, concettuale ed applicativa utilizzabile per una molteplicit\u00e0 di percorsi educativi e pratici successivi a quello della laurea triennale.Oltre, infatti, alla naturale prosecuzione verso un percorso di laurea magistrale, non solo di tipo manageriale o aziendalistico, gli studenti acquisiranno competenze ulteriormente sviluppabili, anche in autonomia, ed utilizzabili in aziende, societ\u00e0 di consulenza e altre organizzazioni, nonch\u00e9 per la costituzione di start-up innovative e ad elevato contenuto tecnologico."
}
<!-- Navigation Rail (Desktop) -->

<div class="w-[88px] min-w-[88px] h-screen max-h-screen overflow-x-hidden overflow-y-auto hidden md:flex flex-col justify-between items-center py-4 shadow-xl dark:shadow-2xl dark:shadow-black z-10 dark:bg-black dark:text-white">
    <nav class="flex flex-col items-center">
        {% for link in site.nav %}
            {% comment %} TODO: this seems to hacky... convert the permalink into a url, and use it that way {% endcomment %}
            {% assign url = page.url | replace: '.', '' | split: '/' | last %}
            {% assign permalink = link.permalink | replace: '.', '' | split: '/' | last %}

            {% assign is_selected = '' %}
            {% if url == permalink %}
                {% assign is_selected = 'is-selected' %}
            {% endif %}

            <a
                href="{{ site.baseurl | append: '/' | append: link.permalink }}"
                class="group w-min mb-3 mx-1 flex flex-col items-center {{ is_selected }}"
            >
                <span class="material-symbols-outlined rounded-full px-4 py-1 mb-1 group-hover:bg-gray-100 group-hover:dark:bg-gray-800 group-[.is-selected]:fill group-[.is-selected]:bg-black group-[.is-selected]:text-white group-[.is-selected]:dark:bg-white group-[.is-selected]:dark:text-black">
                    {{ link.icon }}
                </span>
                <span class="text-xs text-center text-gray-800 dark:text-gray-100 group-[.is-selected]:font-bold group-[.is-selected]:text-black group-[.is-selected]:dark:text-white">
                    {{ link.text }}
                </span>
            </a>
        {% endfor %}
    </nav>
    <span
        id="desktopDarkMode"
        class="material-symbols-outlined rounded-full p-4 border border-black dark:border-white cursor-pointer"
        onclick="toggleDarkMode()"
    >
        dark_mode
    </span>
</div>

<!-- Navigation Bar (Mobile) -->

<div class="relative z-10 w-full h-12 md:hidden flex items-center p-7 bg-white dark:bg-black dark:text-white justify-between">
    <div class="flex items-center gap-5">
        <button class="material-symbols-outlined cursor-pointer" onclick="openNavigationDrawer()">menu</button>
        <h1 class="font-bold">Sapienza Informatica</h1>
    </div>
    <div class="flex items-center gap-2">
        <a href="risorse" class="material-symbols-outlined"> link </a>
        <a href="orari" id="schedule-shortcut" class="material-symbols-outlined"> calendar_month </a>
    </div>
</div>

<!-- Navigation Drawer (Mobile) -->

<dialog
    class="h-full ml-0 p-4 items-center rounded-r-3xl shadow-xl dark:shadow-2xl dark:shadow-black backdrop:backdrop-blur-sm dark:bg-black dark:text-white"
    id="navigationDrawer"
    onclick="closeNavigationDrawer()"
>
    <div class="flex flex-col justify-between items-center h-full">
        <div>
            <button
                class="material-symbols-outlined rounded-full p-2 m-2 hover:bg-gray-100 cursor-pointer"
                onclick="closeNavigationDrawer()"
            >
                menu_open
            </button>

            {% for link in site.nav %}
                {% comment %} TODO: this seems to hacky... convert the permalink into a url, and use it that way {% endcomment %}
                {% assign url = page.url | replace: '.', '' | split: '/' | last %}
                {% assign permalink = link.permalink | replace: '.', '' | split: '/' | last %}

                {% assign is_selected = '' %}
                {% if url == permalink %}
                    {% assign is_selected = 'is-selected' %}
                {% endif %}

                <span class="group {{ is_selected }}">
                    <a
                        href="{{ site.baseurl | append: '/' | append: link.permalink }}"
                        class="w-72 h-12 py-1 px-4 flex items-center rounded-full hover:bg-gray-100 dark:hover:bg-gray-800 group-[.is-selected]:bg-black group-[.is-selected]:dark:bg-white"
                    >
                        <span class="material-symbols-outlined mr-4 rounded-full group-hover:fill group-[.is-selected]:fill group-[.is-selected]:text-white group-[.is-selected]:dark:text-black">
                            {{ link.icon }}
                        </span>
                        <span class="text-base text-center text-gray-800 dark:text-gray-100 group-[.is-selected]:font-bold group-[.is-selected]:text-white group-[.is-selected]:dark:text-black">
                            {{ link.text }}
                        </span>
                    </a>
                </span>
            {% endfor %}
        </div>
        <span
            class="rounded-full p-4 border border-black dark:border-white flex items-center gap-4 cursor-pointer"
            onclick="toggleDarkMode()"
        >
            <span id="mobileDarkMode" class="material-symbols-outlined"> dark_mode </span>

            Cambia tema
        </span>
    </div>
</dialog>

<script>
    function openNavigationDrawer() {
        document.getElementById('navigationDrawer').showModal();
    }

    function closeNavigationDrawer() {
        document.getElementById('navigationDrawer').close();
    }

    function updateScheduleShortcut() {
        const selectedSubjects = new Set(JSON.parse(localStorage.getItem('selectedSubjects')));
        if (selectedSubjects.size > 0) document.getElementById('schedule-shortcut').setAttribute('href', 'orario');
    }

    function setupDarkMode() {
        const desktopDarkMode = document.getElementById('desktopDarkMode');
        const mobileDarkMode = document.getElementById('mobileDarkMode');

        const isDarkMode = JSON.parse(localStorage.getItem('darkMode'));
        const icon = isDarkMode ? 'light_mode' : 'dark_mode';

        desktopDarkMode.innerHTML = icon;
        mobileDarkMode.innerHTML = icon;

        document.body.classList.toggle('dark', isDarkMode);
    }

    function toggleDarkMode() {
        document.body.classList.toggle('dark');
        const isDarkMode = document.body.classList.contains('dark');

        localStorage.setItem('darkMode', isDarkMode);
        const icon = isDarkMode ? 'light_mode' : 'dark_mode';

        desktopDarkMode.innerHTML = icon;
        mobileDarkMode.innerHTML = icon;

        window.event.stopPropagation();
    }

    document.addEventListener('DOMContentLoaded', updateScheduleShortcut);
    document.addEventListener('DOMContentLoaded', setupDarkMode);
    document.addEventListener('storage', updateScheduleShortcut);
</script>
